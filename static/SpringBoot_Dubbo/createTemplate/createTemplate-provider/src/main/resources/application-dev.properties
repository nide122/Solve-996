server.port=8111
spring.jmx.default-domain=createTemplate-provider
endpoints.jmx.domain=createTemplate-provider
logging.level.com.createTemplate.provider.core.dubbo.service=debug
logging.level.com.createTemplate.provider.admin.dubbo.service=debug
logging.level.com.createTemplate.provider.base.dubbo.service=debug
## Redis 配置
## Redis 数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=
## Redis服务器连接端口
spring.redis.port=
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=600
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1000
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=300
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=100000

## mongodb 配置
spring.data.mongodb.host=
spring.data.mongodb.username=
spring.data.mongodb.password=
spring.data.mongodb.database=
spring.data.mongodb.port=


## Dubbo 服务提供者配置
spring.dubbo.application.name=createTemplate-provider
spring.dubbo.registry.address=zookeeper://
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.serialization=java
spring.dubbo.protocol.port=
spring.dubbo.scan=com.createTemplate

## 数据源配置
#数据源的名称。
spring.datasource.name=createTemplate-core
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#最大活跃数
spring.datasource.maxActive=100
#初始化数量
spring.datasource.initialSize=5
#最大连接等待超时时间
spring.datasource.maxWait=60000
  #打开PSCache，并且指定每个连接PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=100
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 1 from dual
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j

## Mybatis 配置
mybatis.typeAliasesPackage=com.createTemplate.api.*.pojo
mybatis.mapperLocations=classpath\:mapper/*.xml
mybatis.configLocation=classpath\:mybatis/mybatis-config.xml
logging.level.com.dy.springboot.server.mapper=info

### rabbitmq 配置
#spring.rabbitmq.host=47.107.50.158
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=create
#spring.rabbitmq.password=create2018


##spring mail配置注意：在spring.mail.password处的值是需要在邮箱设置里面生成的授权码，这个不是真实的密码。
spring.mail.host=smtp.qq.com
#发送方的邮箱
spring.mail.username=
#对于qq邮箱而言 密码指的就是发送方的授权码
spring.mail.password=
spring.mail.default-encoding=UTF-8
#登录服务器是否需要认证
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=10000
#SSL证书Socket工厂
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#使用SMTPS协议465端口
spring.mail.port=465
spring.mail.properties.mail.smtp.socketFactory.port=465
#是否用启用加密传送的协议验证项
spring.mail.properties.mail.smtp.starttls.enable=false
#是否用启用加密传送的协议验证项
spring.mail.properties.mail.smtp.starttls.required=fasle

## alibaba sms
com.createTemplate.sms.appKey=
com.createTemplate.sms.appSecret=
com.createTemplate.sms.serverUrl = 

## alibaba oos
com.createTemplate.oos.appKey=
com.createTemplate.oos.appSecret=
com.createTemplate.oos.endpointInternet=
com.createTemplate.oos.commonBucket=
com.createTemplate.oos.commonObjectKey=
com.createTemplate.oos.commonUrl=
